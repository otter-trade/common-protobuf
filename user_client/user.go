// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package user_client

import (
	"context"

	"common-protobuf/pb/common"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty                         = user.Empty
	GetUserApiKeyByStrategyIdReq  = user.GetUserApiKeyByStrategyIdReq
	GetUserApiKeyByStrategyIdResp = user.GetUserApiKeyByStrategyIdResp
	UserAPIKey                    = user.UserAPIKey

	User interface {
		// -----------------------用户-----------------------
		GetUserApiKeyByStrategyId(ctx context.Context, in *GetUserApiKeyByStrategyIdReq, opts ...grpc.CallOption) (*GetUserApiKeyByStrategyIdResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// -----------------------用户-----------------------
func (m *defaultUser) GetUserApiKeyByStrategyId(ctx context.Context, in *GetUserApiKeyByStrategyIdReq, opts ...grpc.CallOption) (*GetUserApiKeyByStrategyIdResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserApiKeyByStrategyId(ctx, in, opts...)
}
