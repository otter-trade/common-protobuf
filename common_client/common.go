// Code generated by goctl. DO NOT EDIT.
// Source: common.proto

package common_client

import (
	"context"

	"github.com/otter-trade/common-protobuf/pb/common"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	APIKey                        = common.APIKey
	GetUserApiKeyByStrategyIdReq  = common.GetUserApiKeyByStrategyIdReq
	GetUserApiKeyByStrategyIdResp = common.GetUserApiKeyByStrategyIdResp

	Common interface {
		// -----------------------用户-----------------------
		GetUserApiKeyByStrategyId(ctx context.Context, in *GetUserApiKeyByStrategyIdReq, opts ...grpc.CallOption) (*GetUserApiKeyByStrategyIdResp, error)
	}

	defaultCommon struct {
		cli zrpc.Client
	}
)

func NewCommon(cli zrpc.Client) Common {
	return &defaultCommon{
		cli: cli,
	}
}

// -----------------------用户-----------------------
func (m *defaultCommon) GetUserApiKeyByStrategyId(ctx context.Context, in *GetUserApiKeyByStrategyIdReq, opts ...grpc.CallOption) (*GetUserApiKeyByStrategyIdResp, error) {
	client := common.NewCommonClient(m.cli.Conn())
	return client.GetUserApiKeyByStrategyId(ctx, in, opts...)
}
