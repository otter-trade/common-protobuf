// Code generated by goctl. DO NOT EDIT.
// Source: common.proto

package common_client

import (
	"context"

	"common-protobuf/pb/common"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty       = common.Empty
	TestApiReq  = common.TestApiReq
	TestApiResp = common.TestApiResp

	Common interface {
		// -----------------------用户-----------------------
		TestApi(ctx context.Context, in *TestApiReq, opts ...grpc.CallOption) (*TestApiResp, error)
	}

	defaultCommon struct {
		cli zrpc.Client
	}
)

func NewCommon(cli zrpc.Client) Common {
	return &defaultCommon{
		cli: cli,
	}
}

// -----------------------用户-----------------------
func (m *defaultCommon) TestApi(ctx context.Context, in *TestApiReq, opts ...grpc.CallOption) (*TestApiResp, error) {
	client := common.NewCommonClient(m.cli.Conn())
	return client.TestApi(ctx, in, opts...)
}
